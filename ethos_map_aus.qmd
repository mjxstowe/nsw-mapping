---
title: "ETHOS Australia Map"
format:
  html:
    theme:
      - lumen
      - assets/styles.scss
    highlight-style: github
    toc: true
    toc-depth: 3
    toc-location: left
    self-contained: true
    code-tools: true
    grid:
      sidebar-width: 300px
      body-width: 1000px
      margin-width: 300px
      gutter-width: 1.5rem
server: shiny
---


```{r setup, include=FALSE}

# SETUP FORMATTING AND STRUCTURE ------------------------------------------

if (is.null(knitr::pandoc_to())) {
  fmt_out <- "interactive"
} else {
  fmt_out <- knitr::pandoc_to()
}

knitr::opts_chunk$set(
  echo = FALSE, include = FALSE,
  warning = FALSE, message = FALSE
)

knitr::opts_chunk$set(
  fig.align = "center", fig.retina = 3,
  fig.width = 6, fig.height = (6 * 0.618),
  out.width = "100%", collapse = TRUE
)

options(
  digits = 3, width = 120,
  dplyr.summarise.inform = FALSE
)
```

```{r load-libraries, include=FALSE}

# LOAD LIBRARIES ----------------------------------------------------------
library(RColorBrewer) 
library(leaflet)
library(leaflet.extras)
library(sf)
library(here)
library(usethis)
library(nswgeo)
# library(aussiemaps)
library(ozmaps)
# library(straya)
# library(absmaps)
library(ggmap)
library(ggplot2)
library(pacman)
library(dplyr)
```
```{r load-data, include = FALSE}
# LOAD DATASETS -----------------------------------------------------------

# Primary Health Networks 
shape <- read_sf(dsn = "raw_data", layer = "Primary_Health_Networks")%>%
  sf::st_as_sf(coords = c("lat", "lon"), # columns with geometry
               crs = 4326) 

# NSW Local Health Districts (LHD)
nsw_lhd <- read_sf(dsn = "raw_data", layer = "NSW_LHD_Boundaries")%>%
  sf::st_as_sf(coords = c("lat", "lon"), # columns with geometry
               crs = 4326) 

# Locations of participating sites 
ethos.loc <- read.csv("raw_data/ethos_locations.csv") %>%
  st_as_sf(coords = c("Longitude", "Latitude"), remove = FALSE)
```

```{r}

library(fontawesome)

# GENERATE COLOUR PALETTE

my.pal2 = brewer.pal(n=7, "GnBu")

marker <- awesomeIcons(
  icon = 'ios-close',
  iconColor = 'black',
  library = 'ion',
  markerColor = my.pal2
)

# Create icon
icon = makeAwesomeIcon(text = fa("fas fa-o"))

# Generate map
nsw_map_ethos <- leaflet(nsw_lhd) %>%addPolygons(data = shape,
              # weight defines how thick the borders will be for our boundaries 
              # (the larger this number, the thicker the lines will become)
              weight = 2, 
              color = "black", 
              dashArray = " ", # makes the boundary lines solid (by default)
              # fillColor = ~pal(Secondary$latest_year_enrolment_FTE), 
              smoothFactor = 0.5,
              opacity = 0.6,
              fillOpacity = 0.2,
              label =  shape$PHN_Name,
              # the boundary lines will turn thick red when we hover over it
              highlightOptions = highlightOptions(color = "darkorange", 
                                                  weight = 3, 
                                                  bringToFront = TRUE))%>%
  
  addTiles() %>%
  # addProviderTiles(providers$CartoDB.Positron)%>%
   addProviderTiles(providers$Esri)%>%
  enableMeasurePath() %>%
  addMeasurePathToolbar(options = measurePathOptions(imperial = FALSE,
                                                     minPixelDistance = 100,
                                                     showDistances = FALSE,
                                                     showOnHover = TRUE))%>%
  
  addPolygons(data = nsw_lhd,
              # weight defines how thick the borders will be for our boundaries 
              # (the larger this number, the thicker the lines will become)
              weight = 2, 
              color = "black", 
              dashArray = " ", # makes the boundary lines solid (by default)
              smoothFactor = 0.5,
              opacity = 1.0,
              fillOpacity = 0.5,
              label =  nsw_lhd$lhd_name,
              # the boundary lines will turn thick red when we hover over it
              highlightOptions = highlightOptions(color = "red", 
                                                  weight = 3, 
                                                  bringToFront = TRUE))%>%
    addPolygons(data = shape,
              # weight defines how thick the borders will be for our boundaries 
              # (the larger this number, the thicker the lines will become)
              weight = 2, 
              color = "black", 
              dashArray = " ", # makes the boundary lines solid (by default)
              # fillColor = ~pal(Secondary$latest_year_enrolment_FTE), 
              smoothFactor = 0.5,
              opacity = 0.6,
              fillOpacity = 0.2,
              label =  shape$PHN_Name,
              # the boundary lines will turn thick red when we hover over it
              highlightOptions = highlightOptions(color = "darkorange", 
                                                  weight = 3, 
                                                  bringToFront = TRUE))%>%

  addAwesomeMarkers(lat=ethos.loc$Latitude,
                    lng=ethos.loc$Longitude, 
                    label=ethos.loc$Site, 
                    icon=fish,
                    clusterOptions = markerClusterOptions()) %>%
   addMiniMap()

# Save map

# save the widget in a html file if needed.
# # library(htmlwidgets)
# saveWidget(nsw_map_ethos, file=paste0( getwd(), "/analysis/data/processed_data/aus_nsw_lhds.html"))
# saving the prepared leaflet plot as a html file
# htmltools::save_html(nsw_map_ethos, "ethos_map_aus.html")

```
